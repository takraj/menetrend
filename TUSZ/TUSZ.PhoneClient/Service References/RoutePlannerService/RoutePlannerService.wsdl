<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:tns="http://tempuri.org/" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="RoutePlannerService" targetNamespace="http://tempuri.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://schemas.datacontract.org/2004/07/TUSZ.Common.ViewModels" />
      <xs:element name="GetStops">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetStopsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q1="http://schemas.datacontract.org/2004/07/TUSZ.Common.ViewModels" minOccurs="0" name="GetStopsResult" nillable="true" type="q1:ArrayOfVM_Stop" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Plan">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="fromStopIdx" type="xs:int" />
            <xs:element minOccurs="0" name="toStopIdx" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PlanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element xmlns:q2="http://schemas.datacontract.org/2004/07/TUSZ.Common.ViewModels" minOccurs="0" name="PlanResult" nillable="true" type="q2:VM_PlanResult" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="anyType" nillable="true" type="xs:anyType" />
      <xs:element name="anyURI" nillable="true" type="xs:anyURI" />
      <xs:element name="base64Binary" nillable="true" type="xs:base64Binary" />
      <xs:element name="boolean" nillable="true" type="xs:boolean" />
      <xs:element name="byte" nillable="true" type="xs:byte" />
      <xs:element name="dateTime" nillable="true" type="xs:dateTime" />
      <xs:element name="decimal" nillable="true" type="xs:decimal" />
      <xs:element name="double" nillable="true" type="xs:double" />
      <xs:element name="float" nillable="true" type="xs:float" />
      <xs:element name="int" nillable="true" type="xs:int" />
      <xs:element name="long" nillable="true" type="xs:long" />
      <xs:element name="QName" nillable="true" type="xs:QName" />
      <xs:element name="short" nillable="true" type="xs:short" />
      <xs:element name="string" nillable="true" type="xs:string" />
      <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte" />
      <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt" />
      <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong" />
      <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort" />
      <xs:element name="char" nillable="true" type="tns:char" />
      <xs:simpleType name="char">
        <xs:restriction base="xs:int" />
      </xs:simpleType>
      <xs:element name="duration" nillable="true" type="tns:duration" />
      <xs:simpleType name="duration">
        <xs:restriction base="xs:duration">
          <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?" />
          <xs:minInclusive value="-P10675199DT2H48M5.4775808S" />
          <xs:maxInclusive value="P10675199DT2H48M5.4775807S" />
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="guid" nillable="true" type="tns:guid" />
      <xs:simpleType name="guid">
        <xs:restriction base="xs:string">
          <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}" />
        </xs:restriction>
      </xs:simpleType>
      <xs:attribute name="FactoryType" type="xs:QName" />
      <xs:attribute name="Id" type="xs:ID" />
      <xs:attribute name="Ref" type="xs:IDREF" />
    </xs:schema>
    <xs:schema xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:tns="http://schemas.datacontract.org/2004/07/TUSZ.Common.ViewModels" elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/TUSZ.Common.ViewModels" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://schemas.microsoft.com/2003/10/Serialization/" />
      <xs:complexType name="ArrayOfVM_Stop">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="VM_Stop" nillable="true" type="tns:VM_Stop" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfVM_Stop" nillable="true" type="tns:ArrayOfVM_Stop" />
      <xs:complexType name="VM_Stop">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:int" />
          <xs:element minOccurs="0" name="lat" type="xs:float" />
          <xs:element minOccurs="0" name="lng" type="xs:float" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="VM_Stop" nillable="true" type="tns:VM_Stop" />
      <xs:complexType name="VM_PlanResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="failMessage" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="isFailed" type="xs:boolean" />
          <xs:element minOccurs="0" name="plan" nillable="true" type="tns:VM_Plan" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="VM_PlanResult" nillable="true" type="tns:VM_PlanResult" />
      <xs:complexType name="VM_Plan">
        <xs:sequence>
          <xs:element minOccurs="0" name="algorythm_name" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="destination" nillable="true" type="tns:VM_Stop" />
          <xs:element minOccurs="0" name="plan_begins" type="xs:dateTime" />
          <xs:element minOccurs="0" name="plan_ends" type="xs:dateTime" />
          <xs:element minOccurs="0" name="plan_time" type="ser:duration" />
          <xs:element minOccurs="0" name="source" nillable="true" type="tns:VM_Stop" />
          <xs:element minOccurs="0" name="travel_groups" nillable="true" type="tns:ArrayOfVM_TravelGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="VM_Plan" nillable="true" type="tns:VM_Plan" />
      <xs:complexType name="ArrayOfVM_TravelGroup">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="VM_TravelGroup" nillable="true" type="tns:VM_TravelGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfVM_TravelGroup" nillable="true" type="tns:ArrayOfVM_TravelGroup" />
      <xs:complexType name="VM_TravelGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="from" nillable="true" type="tns:VM_Stop" />
          <xs:element minOccurs="0" name="from_time" type="xs:dateTime" />
          <xs:element minOccurs="0" name="passed_stops" nillable="true" type="tns:ArrayOfVM_PassedStop" />
          <xs:element minOccurs="0" name="route" nillable="true" type="tns:VM_Route" />
          <xs:element minOccurs="0" name="to" nillable="true" type="tns:VM_Stop" />
          <xs:element minOccurs="0" name="to_time" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="VM_TravelGroup" nillable="true" type="tns:VM_TravelGroup" />
      <xs:complexType name="ArrayOfVM_PassedStop">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="VM_PassedStop" nillable="true" type="tns:VM_PassedStop" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfVM_PassedStop" nillable="true" type="tns:ArrayOfVM_PassedStop" />
      <xs:complexType name="VM_PassedStop">
        <xs:sequence>
          <xs:element minOccurs="0" name="getOnOff" type="xs:boolean" />
          <xs:element minOccurs="0" name="stop" nillable="true" type="tns:VM_Stop" />
          <xs:element minOccurs="0" name="when" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="VM_PassedStop" nillable="true" type="tns:VM_PassedStop" />
      <xs:complexType name="VM_Route">
        <xs:sequence>
          <xs:element minOccurs="0" name="html_base_color" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="html_text_color" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="id" type="xs:int" />
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="VM_Route" nillable="true" type="tns:VM_Route" />
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="IRoutePlannerService_GetStops_InputMessage">
    <wsdl:part name="parameters" element="tns:GetStops" />
  </wsdl:message>
  <wsdl:message name="IRoutePlannerService_GetStops_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetStopsResponse" />
  </wsdl:message>
  <wsdl:message name="IRoutePlannerService_Plan_InputMessage">
    <wsdl:part name="parameters" element="tns:Plan" />
  </wsdl:message>
  <wsdl:message name="IRoutePlannerService_Plan_OutputMessage">
    <wsdl:part name="parameters" element="tns:PlanResponse" />
  </wsdl:message>
  <wsdl:portType name="IRoutePlannerService">
    <wsdl:operation name="GetStops">
      <wsdl:input wsaw:Action="http://tempuri.org/IRoutePlannerService/GetStops" message="tns:IRoutePlannerService_GetStops_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/IRoutePlannerService/GetStopsResponse" message="tns:IRoutePlannerService_GetStops_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="Plan">
      <wsdl:input wsaw:Action="http://tempuri.org/IRoutePlannerService/Plan" message="tns:IRoutePlannerService_Plan_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/IRoutePlannerService/PlanResponse" message="tns:IRoutePlannerService_Plan_OutputMessage" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_IRoutePlannerService" type="tns:IRoutePlannerService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetStops">
      <soap:operation soapAction="http://tempuri.org/IRoutePlannerService/GetStops" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Plan">
      <soap:operation soapAction="http://tempuri.org/IRoutePlannerService/Plan" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RoutePlannerService">
    <wsdl:port name="BasicHttpBinding_IRoutePlannerService" binding="tns:BasicHttpBinding_IRoutePlannerService">
      <soap:address location="http://localhost:10559/WCF/RoutePlannerService.svc" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>