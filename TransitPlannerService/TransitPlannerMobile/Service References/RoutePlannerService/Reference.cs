//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace TransitPlannerMobile.RoutePlannerService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitStop", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerContracts")]
    public partial class TransitStop : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cityField;
        
        private bool has_wheelchair_supportField;
        
        private int idField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        private string nameField;
        
        private string postal_codeField;
        
        private string streetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool has_wheelchair_support {
            get {
                return this.has_wheelchair_supportField;
            }
            set {
                if ((this.has_wheelchair_supportField.Equals(value) != true)) {
                    this.has_wheelchair_supportField = value;
                    this.RaisePropertyChanged("has_wheelchair_support");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                if ((this.longitudeField.Equals(value) != true)) {
                    this.longitudeField = value;
                    this.RaisePropertyChanged("longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string postal_code {
            get {
                return this.postal_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.postal_codeField, value) != true)) {
                    this.postal_codeField = value;
                    this.RaisePropertyChanged("postal_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string street {
            get {
                return this.streetField;
            }
            set {
                if ((object.ReferenceEquals(this.streetField, value) != true)) {
                    this.streetField = value;
                    this.RaisePropertyChanged("street");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitStopInfo", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerContracts")]
    public partial class TransitStopInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitRoute> available_routesField;
        
        private TransitPlannerMobile.RoutePlannerService.TransitStop stopField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitRoute> available_routes {
            get {
                return this.available_routesField;
            }
            set {
                if ((object.ReferenceEquals(this.available_routesField, value) != true)) {
                    this.available_routesField = value;
                    this.RaisePropertyChanged("available_routes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransitPlannerMobile.RoutePlannerService.TransitStop stop {
            get {
                return this.stopField;
            }
            set {
                if ((object.ReferenceEquals(this.stopField, value) != true)) {
                    this.stopField = value;
                    this.RaisePropertyChanged("stop");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitRoute", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerContracts")]
    public partial class TransitRoute : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string LongNameField;
        
        private string RouteColorField;
        
        private string RouteTextColorField;
        
        private int RouteTypeField;
        
        private string ShortNameField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LongName {
            get {
                return this.LongNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LongNameField, value) != true)) {
                    this.LongNameField = value;
                    this.RaisePropertyChanged("LongName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteColor {
            get {
                return this.RouteColorField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteColorField, value) != true)) {
                    this.RouteColorField = value;
                    this.RaisePropertyChanged("RouteColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteTextColor {
            get {
                return this.RouteTextColorField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteTextColorField, value) != true)) {
                    this.RouteTextColorField = value;
                    this.RaisePropertyChanged("RouteTextColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RouteType {
            get {
                return this.RouteTypeField;
            }
            set {
                if ((this.RouteTypeField.Equals(value) != true)) {
                    this.RouteTypeField = value;
                    this.RaisePropertyChanged("RouteType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitMetadata", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerContracts")]
    public partial class TransitMetadata : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int valid_durationField;
        
        private TransitPlannerMobile.RoutePlannerService.TransitDate valid_fromField;
        
        private TransitPlannerMobile.RoutePlannerService.TransitDate valid_toField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int valid_duration {
            get {
                return this.valid_durationField;
            }
            set {
                if ((this.valid_durationField.Equals(value) != true)) {
                    this.valid_durationField = value;
                    this.RaisePropertyChanged("valid_duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransitPlannerMobile.RoutePlannerService.TransitDate valid_from {
            get {
                return this.valid_fromField;
            }
            set {
                if ((object.ReferenceEquals(this.valid_fromField, value) != true)) {
                    this.valid_fromField = value;
                    this.RaisePropertyChanged("valid_from");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransitPlannerMobile.RoutePlannerService.TransitDate valid_to {
            get {
                return this.valid_toField;
            }
            set {
                if ((object.ReferenceEquals(this.valid_toField, value) != true)) {
                    this.valid_toField = value;
                    this.RaisePropertyChanged("valid_to");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitDate", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerContracts")]
    public partial class TransitDate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int dayField;
        
        private int monthField;
        
        private int yearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int day {
            get {
                return this.dayField;
            }
            set {
                if ((this.dayField.Equals(value) != true)) {
                    this.dayField = value;
                    this.RaisePropertyChanged("day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int month {
            get {
                return this.monthField;
            }
            set {
                if ((this.monthField.Equals(value) != true)) {
                    this.monthField = value;
                    this.RaisePropertyChanged("month");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int year {
            get {
                return this.yearField;
            }
            set {
                if ((this.yearField.Equals(value) != true)) {
                    this.yearField = value;
                    this.RaisePropertyChanged("year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitSequenceGroup", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerContracts")]
    public partial class TransitSequenceGroup : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitDateTime> sequence_base_timesField;
        
        private System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceElement> sequence_elementsField;
        
        private TransitPlannerMobile.RoutePlannerService.TransitSequenceInfo sequence_infoField;
        
        private System.Collections.ObjectModel.ObservableCollection<int> sequence_trip_idsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitDateTime> sequence_base_times {
            get {
                return this.sequence_base_timesField;
            }
            set {
                if ((object.ReferenceEquals(this.sequence_base_timesField, value) != true)) {
                    this.sequence_base_timesField = value;
                    this.RaisePropertyChanged("sequence_base_times");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceElement> sequence_elements {
            get {
                return this.sequence_elementsField;
            }
            set {
                if ((object.ReferenceEquals(this.sequence_elementsField, value) != true)) {
                    this.sequence_elementsField = value;
                    this.RaisePropertyChanged("sequence_elements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransitPlannerMobile.RoutePlannerService.TransitSequenceInfo sequence_info {
            get {
                return this.sequence_infoField;
            }
            set {
                if ((object.ReferenceEquals(this.sequence_infoField, value) != true)) {
                    this.sequence_infoField = value;
                    this.RaisePropertyChanged("sequence_info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<int> sequence_trip_ids {
            get {
                return this.sequence_trip_idsField;
            }
            set {
                if ((object.ReferenceEquals(this.sequence_trip_idsField, value) != true)) {
                    this.sequence_trip_idsField = value;
                    this.RaisePropertyChanged("sequence_trip_ids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitSequenceInfo", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerContracts")]
    public partial class TransitSequenceInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int count_of_stopsField;
        
        private TransitPlannerMobile.RoutePlannerService.TransitStop first_stopField;
        
        private string headsignField;
        
        private int idField;
        
        private TransitPlannerMobile.RoutePlannerService.TransitStop last_stopField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count_of_stops {
            get {
                return this.count_of_stopsField;
            }
            set {
                if ((this.count_of_stopsField.Equals(value) != true)) {
                    this.count_of_stopsField = value;
                    this.RaisePropertyChanged("count_of_stops");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransitPlannerMobile.RoutePlannerService.TransitStop first_stop {
            get {
                return this.first_stopField;
            }
            set {
                if ((object.ReferenceEquals(this.first_stopField, value) != true)) {
                    this.first_stopField = value;
                    this.RaisePropertyChanged("first_stop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string headsign {
            get {
                return this.headsignField;
            }
            set {
                if ((object.ReferenceEquals(this.headsignField, value) != true)) {
                    this.headsignField = value;
                    this.RaisePropertyChanged("headsign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransitPlannerMobile.RoutePlannerService.TransitStop last_stop {
            get {
                return this.last_stopField;
            }
            set {
                if ((object.ReferenceEquals(this.last_stopField, value) != true)) {
                    this.last_stopField = value;
                    this.RaisePropertyChanged("last_stop");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitDateTime", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerContracts")]
    public partial class TransitDateTime : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int dayField;
        
        private int hourField;
        
        private int minuteField;
        
        private int monthField;
        
        private int yearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int day {
            get {
                return this.dayField;
            }
            set {
                if ((this.dayField.Equals(value) != true)) {
                    this.dayField = value;
                    this.RaisePropertyChanged("day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int hour {
            get {
                return this.hourField;
            }
            set {
                if ((this.hourField.Equals(value) != true)) {
                    this.hourField = value;
                    this.RaisePropertyChanged("hour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int minute {
            get {
                return this.minuteField;
            }
            set {
                if ((this.minuteField.Equals(value) != true)) {
                    this.minuteField = value;
                    this.RaisePropertyChanged("minute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int month {
            get {
                return this.monthField;
            }
            set {
                if ((this.monthField.Equals(value) != true)) {
                    this.monthField = value;
                    this.RaisePropertyChanged("month");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int year {
            get {
                return this.yearField;
            }
            set {
                if ((this.yearField.Equals(value) != true)) {
                    this.yearField = value;
                    this.RaisePropertyChanged("year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitSequenceElement", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerContracts")]
    public partial class TransitSequenceElement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int arrivalField;
        
        private int departureField;
        
        private int orderField;
        
        private TransitPlannerMobile.RoutePlannerService.TransitStop stopField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int arrival {
            get {
                return this.arrivalField;
            }
            set {
                if ((this.arrivalField.Equals(value) != true)) {
                    this.arrivalField = value;
                    this.RaisePropertyChanged("arrival");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int departure {
            get {
                return this.departureField;
            }
            set {
                if ((this.departureField.Equals(value) != true)) {
                    this.departureField = value;
                    this.RaisePropertyChanged("departure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int order {
            get {
                return this.orderField;
            }
            set {
                if ((this.orderField.Equals(value) != true)) {
                    this.orderField = value;
                    this.RaisePropertyChanged("order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransitPlannerMobile.RoutePlannerService.TransitStop stop {
            get {
                return this.stopField;
            }
            set {
                if ((object.ReferenceEquals(this.stopField, value) != true)) {
                    this.stopField = value;
                    this.RaisePropertyChanged("stop");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebTransitPlanRequestParameters", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerWebContracts")]
    public partial class WebTransitPlanRequestParameters : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<int> disabled_route_typesField;
        
        private int fromField;
        
        private int max_waiting_timeField;
        
        private bool needs_wheelchair_supportField;
        
        private int toField;
        
        private int walking_speed_categoryField;
        
        private TransitPlannerMobile.RoutePlannerService.TransitDateTime whenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<int> disabled_route_types {
            get {
                return this.disabled_route_typesField;
            }
            set {
                if ((object.ReferenceEquals(this.disabled_route_typesField, value) != true)) {
                    this.disabled_route_typesField = value;
                    this.RaisePropertyChanged("disabled_route_types");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int from {
            get {
                return this.fromField;
            }
            set {
                if ((this.fromField.Equals(value) != true)) {
                    this.fromField = value;
                    this.RaisePropertyChanged("from");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int max_waiting_time {
            get {
                return this.max_waiting_timeField;
            }
            set {
                if ((this.max_waiting_timeField.Equals(value) != true)) {
                    this.max_waiting_timeField = value;
                    this.RaisePropertyChanged("max_waiting_time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool needs_wheelchair_support {
            get {
                return this.needs_wheelchair_supportField;
            }
            set {
                if ((this.needs_wheelchair_supportField.Equals(value) != true)) {
                    this.needs_wheelchair_supportField = value;
                    this.RaisePropertyChanged("needs_wheelchair_support");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int to {
            get {
                return this.toField;
            }
            set {
                if ((this.toField.Equals(value) != true)) {
                    this.toField = value;
                    this.RaisePropertyChanged("to");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int walking_speed_category {
            get {
                return this.walking_speed_categoryField;
            }
            set {
                if ((this.walking_speed_categoryField.Equals(value) != true)) {
                    this.walking_speed_categoryField = value;
                    this.RaisePropertyChanged("walking_speed_category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransitPlannerMobile.RoutePlannerService.TransitDateTime when {
            get {
                return this.whenField;
            }
            set {
                if ((object.ReferenceEquals(this.whenField, value) != true)) {
                    this.whenField = value;
                    this.RaisePropertyChanged("when");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitPlan", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerContracts")]
    public partial class TransitPlan : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string algorithmField;
        
        private TransitPlannerMobile.RoutePlannerService.TransitDateTime base_timeField;
        
        private TransitPlannerMobile.RoutePlannerService.TransitDateTime end_timeField;
        
        private System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitPlanInstruction> instructionsField;
        
        private double plan_computation_timeField;
        
        private int route_durationField;
        
        private double route_lengthField;
        
        private System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitRoute> used_routesField;
        
        private System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitTrip> used_tripsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string algorithm {
            get {
                return this.algorithmField;
            }
            set {
                if ((object.ReferenceEquals(this.algorithmField, value) != true)) {
                    this.algorithmField = value;
                    this.RaisePropertyChanged("algorithm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransitPlannerMobile.RoutePlannerService.TransitDateTime base_time {
            get {
                return this.base_timeField;
            }
            set {
                if ((object.ReferenceEquals(this.base_timeField, value) != true)) {
                    this.base_timeField = value;
                    this.RaisePropertyChanged("base_time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransitPlannerMobile.RoutePlannerService.TransitDateTime end_time {
            get {
                return this.end_timeField;
            }
            set {
                if ((object.ReferenceEquals(this.end_timeField, value) != true)) {
                    this.end_timeField = value;
                    this.RaisePropertyChanged("end_time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitPlanInstruction> instructions {
            get {
                return this.instructionsField;
            }
            set {
                if ((object.ReferenceEquals(this.instructionsField, value) != true)) {
                    this.instructionsField = value;
                    this.RaisePropertyChanged("instructions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double plan_computation_time {
            get {
                return this.plan_computation_timeField;
            }
            set {
                if ((this.plan_computation_timeField.Equals(value) != true)) {
                    this.plan_computation_timeField = value;
                    this.RaisePropertyChanged("plan_computation_time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int route_duration {
            get {
                return this.route_durationField;
            }
            set {
                if ((this.route_durationField.Equals(value) != true)) {
                    this.route_durationField = value;
                    this.RaisePropertyChanged("route_duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double route_length {
            get {
                return this.route_lengthField;
            }
            set {
                if ((this.route_lengthField.Equals(value) != true)) {
                    this.route_lengthField = value;
                    this.RaisePropertyChanged("route_length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitRoute> used_routes {
            get {
                return this.used_routesField;
            }
            set {
                if ((object.ReferenceEquals(this.used_routesField, value) != true)) {
                    this.used_routesField = value;
                    this.RaisePropertyChanged("used_routes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitTrip> used_trips {
            get {
                return this.used_tripsField;
            }
            set {
                if ((object.ReferenceEquals(this.used_tripsField, value) != true)) {
                    this.used_tripsField = value;
                    this.RaisePropertyChanged("used_trips");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitPlanInstruction", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerContracts")]
    public partial class TransitPlanInstruction : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool is_walkingField;
        
        private int plan_minuteField;
        
        private int route_idField;
        
        private TransitPlannerMobile.RoutePlannerService.TransitStop stopField;
        
        private int trip_idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool is_walking {
            get {
                return this.is_walkingField;
            }
            set {
                if ((this.is_walkingField.Equals(value) != true)) {
                    this.is_walkingField = value;
                    this.RaisePropertyChanged("is_walking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int plan_minute {
            get {
                return this.plan_minuteField;
            }
            set {
                if ((this.plan_minuteField.Equals(value) != true)) {
                    this.plan_minuteField = value;
                    this.RaisePropertyChanged("plan_minute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int route_id {
            get {
                return this.route_idField;
            }
            set {
                if ((this.route_idField.Equals(value) != true)) {
                    this.route_idField = value;
                    this.RaisePropertyChanged("route_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransitPlannerMobile.RoutePlannerService.TransitStop stop {
            get {
                return this.stopField;
            }
            set {
                if ((object.ReferenceEquals(this.stopField, value) != true)) {
                    this.stopField = value;
                    this.RaisePropertyChanged("stop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int trip_id {
            get {
                return this.trip_idField;
            }
            set {
                if ((this.trip_idField.Equals(value) != true)) {
                    this.trip_idField = value;
                    this.RaisePropertyChanged("trip_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitTrip", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerContracts")]
    public partial class TransitTrip : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string headsignField;
        
        private int idField;
        
        private int route_idField;
        
        private int sequence_idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string headsign {
            get {
                return this.headsignField;
            }
            set {
                if ((object.ReferenceEquals(this.headsignField, value) != true)) {
                    this.headsignField = value;
                    this.RaisePropertyChanged("headsign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int route_id {
            get {
                return this.route_idField;
            }
            set {
                if ((this.route_idField.Equals(value) != true)) {
                    this.route_idField = value;
                    this.RaisePropertyChanged("route_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sequence_id {
            get {
                return this.sequence_idField;
            }
            set {
                if ((this.sequence_idField.Equals(value) != true)) {
                    this.sequence_idField = value;
                    this.RaisePropertyChanged("sequence_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendTroubleReportRequest", Namespace="http://schemas.datacontract.org/2004/07/TransitPlannerWebContracts")]
    public partial class SendTroubleReportRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int categoryField;
        
        private string descriptionField;
        
        private bool has_location_dataField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        private TransitPlannerMobile.RoutePlannerService.TransitDateTime timestampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int category {
            get {
                return this.categoryField;
            }
            set {
                if ((this.categoryField.Equals(value) != true)) {
                    this.categoryField = value;
                    this.RaisePropertyChanged("category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool has_location_data {
            get {
                return this.has_location_dataField;
            }
            set {
                if ((this.has_location_dataField.Equals(value) != true)) {
                    this.has_location_dataField = value;
                    this.RaisePropertyChanged("has_location_data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                if ((this.longitudeField.Equals(value) != true)) {
                    this.longitudeField = value;
                    this.RaisePropertyChanged("longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TransitPlannerMobile.RoutePlannerService.TransitDateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                if ((object.ReferenceEquals(this.timestampField, value) != true)) {
                    this.timestampField = value;
                    this.RaisePropertyChanged("timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RoutePlannerService.ISoapService")]
    public interface ISoapService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISoapService/GetAllStops", ReplyAction="http://tempuri.org/ISoapService/GetAllStopsResponse")]
        System.IAsyncResult BeginGetAllStops(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop> EndGetAllStops(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISoapService/GetStops", ReplyAction="http://tempuri.org/ISoapService/GetStopsResponse")]
        System.IAsyncResult BeginGetStops(string filter, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop> EndGetStops(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISoapService/GetStop", ReplyAction="http://tempuri.org/ISoapService/GetStopResponse")]
        System.IAsyncResult BeginGetStop(int id, System.AsyncCallback callback, object asyncState);
        
        TransitPlannerMobile.RoutePlannerService.TransitStopInfo EndGetStop(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISoapService/GetRoutes", ReplyAction="http://tempuri.org/ISoapService/GetRoutesResponse")]
        System.IAsyncResult BeginGetRoutes(string filter, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitRoute> EndGetRoutes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISoapService/GetRoute", ReplyAction="http://tempuri.org/ISoapService/GetRouteResponse")]
        System.IAsyncResult BeginGetRoute(int id, System.AsyncCallback callback, object asyncState);
        
        TransitPlannerMobile.RoutePlannerService.TransitRoute EndGetRoute(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISoapService/GetMetadata", ReplyAction="http://tempuri.org/ISoapService/GetMetadataResponse")]
        System.IAsyncResult BeginGetMetadata(System.AsyncCallback callback, object asyncState);
        
        TransitPlannerMobile.RoutePlannerService.TransitMetadata EndGetMetadata(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISoapService/GetSchedule", ReplyAction="http://tempuri.org/ISoapService/GetScheduleResponse")]
        System.IAsyncResult BeginGetSchedule(int route_id, TransitPlannerMobile.RoutePlannerService.TransitDate when, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceGroup> EndGetSchedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISoapService/GetSequences", ReplyAction="http://tempuri.org/ISoapService/GetSequencesResponse")]
        System.IAsyncResult BeginGetSequences(int route_id, TransitPlannerMobile.RoutePlannerService.TransitDate when, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceInfo> EndGetSequences(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISoapService/GetSequence", ReplyAction="http://tempuri.org/ISoapService/GetSequenceResponse")]
        System.IAsyncResult BeginGetSequence(int id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceElement> EndGetSequence(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISoapService/GetPlan", ReplyAction="http://tempuri.org/ISoapService/GetPlanResponse")]
        System.IAsyncResult BeginGetPlan(TransitPlannerMobile.RoutePlannerService.WebTransitPlanRequestParameters parameters, System.AsyncCallback callback, object asyncState);
        
        TransitPlannerMobile.RoutePlannerService.TransitPlan EndGetPlan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISoapService/GetSimplePlan", ReplyAction="http://tempuri.org/ISoapService/GetSimplePlanResponse")]
        System.IAsyncResult BeginGetSimplePlan(int from, int to, int year, int month, int day, int hour, int minute, System.AsyncCallback callback, object asyncState);
        
        TransitPlannerMobile.RoutePlannerService.TransitPlan EndGetSimplePlan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/ISoapService/SendTroubleReport")]
        System.IAsyncResult BeginSendTroubleReport(TransitPlannerMobile.RoutePlannerService.SendTroubleReportRequest trouble_report_parameters, System.AsyncCallback callback, object asyncState);
        
        void EndSendTroubleReport(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISoapServiceChannel : TransitPlannerMobile.RoutePlannerService.ISoapService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllStopsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllStopsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStopsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStopsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TransitPlannerMobile.RoutePlannerService.TransitStopInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TransitPlannerMobile.RoutePlannerService.TransitStopInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRoutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitRoute> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitRoute>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TransitPlannerMobile.RoutePlannerService.TransitRoute Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TransitPlannerMobile.RoutePlannerService.TransitRoute)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TransitPlannerMobile.RoutePlannerService.TransitMetadata Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TransitPlannerMobile.RoutePlannerService.TransitMetadata)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceGroup> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceGroup>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSequencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSequencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSequenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSequenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceElement> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceElement>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TransitPlannerMobile.RoutePlannerService.TransitPlan Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TransitPlannerMobile.RoutePlannerService.TransitPlan)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSimplePlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSimplePlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TransitPlannerMobile.RoutePlannerService.TransitPlan Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TransitPlannerMobile.RoutePlannerService.TransitPlan)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SoapServiceClient : System.ServiceModel.ClientBase<TransitPlannerMobile.RoutePlannerService.ISoapService>, TransitPlannerMobile.RoutePlannerService.ISoapService {
        
        private BeginOperationDelegate onBeginGetAllStopsDelegate;
        
        private EndOperationDelegate onEndGetAllStopsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllStopsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStopsDelegate;
        
        private EndOperationDelegate onEndGetStopsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStopsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStopDelegate;
        
        private EndOperationDelegate onEndGetStopDelegate;
        
        private System.Threading.SendOrPostCallback onGetStopCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRoutesDelegate;
        
        private EndOperationDelegate onEndGetRoutesDelegate;
        
        private System.Threading.SendOrPostCallback onGetRoutesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRouteDelegate;
        
        private EndOperationDelegate onEndGetRouteDelegate;
        
        private System.Threading.SendOrPostCallback onGetRouteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMetadataDelegate;
        
        private EndOperationDelegate onEndGetMetadataDelegate;
        
        private System.Threading.SendOrPostCallback onGetMetadataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetScheduleDelegate;
        
        private EndOperationDelegate onEndGetScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onGetScheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSequencesDelegate;
        
        private EndOperationDelegate onEndGetSequencesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSequencesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSequenceDelegate;
        
        private EndOperationDelegate onEndGetSequenceDelegate;
        
        private System.Threading.SendOrPostCallback onGetSequenceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlanDelegate;
        
        private EndOperationDelegate onEndGetPlanDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlanCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSimplePlanDelegate;
        
        private EndOperationDelegate onEndGetSimplePlanDelegate;
        
        private System.Threading.SendOrPostCallback onGetSimplePlanCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendTroubleReportDelegate;
        
        private EndOperationDelegate onEndSendTroubleReportDelegate;
        
        private System.Threading.SendOrPostCallback onSendTroubleReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SoapServiceClient() {
        }
        
        public SoapServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SoapServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetAllStopsCompletedEventArgs> GetAllStopsCompleted;
        
        public event System.EventHandler<GetStopsCompletedEventArgs> GetStopsCompleted;
        
        public event System.EventHandler<GetStopCompletedEventArgs> GetStopCompleted;
        
        public event System.EventHandler<GetRoutesCompletedEventArgs> GetRoutesCompleted;
        
        public event System.EventHandler<GetRouteCompletedEventArgs> GetRouteCompleted;
        
        public event System.EventHandler<GetMetadataCompletedEventArgs> GetMetadataCompleted;
        
        public event System.EventHandler<GetScheduleCompletedEventArgs> GetScheduleCompleted;
        
        public event System.EventHandler<GetSequencesCompletedEventArgs> GetSequencesCompleted;
        
        public event System.EventHandler<GetSequenceCompletedEventArgs> GetSequenceCompleted;
        
        public event System.EventHandler<GetPlanCompletedEventArgs> GetPlanCompleted;
        
        public event System.EventHandler<GetSimplePlanCompletedEventArgs> GetSimplePlanCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendTroubleReportCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TransitPlannerMobile.RoutePlannerService.ISoapService.BeginGetAllStops(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllStops(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop> TransitPlannerMobile.RoutePlannerService.ISoapService.EndGetAllStops(System.IAsyncResult result) {
            return base.Channel.EndGetAllStops(result);
        }
        
        private System.IAsyncResult OnBeginGetAllStops(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).BeginGetAllStops(callback, asyncState);
        }
        
        private object[] OnEndGetAllStops(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop> retVal = ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).EndGetAllStops(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllStopsCompleted(object state) {
            if ((this.GetAllStopsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllStopsCompleted(this, new GetAllStopsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllStopsAsync() {
            this.GetAllStopsAsync(null);
        }
        
        public void GetAllStopsAsync(object userState) {
            if ((this.onBeginGetAllStopsDelegate == null)) {
                this.onBeginGetAllStopsDelegate = new BeginOperationDelegate(this.OnBeginGetAllStops);
            }
            if ((this.onEndGetAllStopsDelegate == null)) {
                this.onEndGetAllStopsDelegate = new EndOperationDelegate(this.OnEndGetAllStops);
            }
            if ((this.onGetAllStopsCompletedDelegate == null)) {
                this.onGetAllStopsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllStopsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllStopsDelegate, null, this.onEndGetAllStopsDelegate, this.onGetAllStopsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TransitPlannerMobile.RoutePlannerService.ISoapService.BeginGetStops(string filter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStops(filter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop> TransitPlannerMobile.RoutePlannerService.ISoapService.EndGetStops(System.IAsyncResult result) {
            return base.Channel.EndGetStops(result);
        }
        
        private System.IAsyncResult OnBeginGetStops(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filter = ((string)(inValues[0]));
            return ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).BeginGetStops(filter, callback, asyncState);
        }
        
        private object[] OnEndGetStops(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop> retVal = ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).EndGetStops(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStopsCompleted(object state) {
            if ((this.GetStopsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStopsCompleted(this, new GetStopsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStopsAsync(string filter) {
            this.GetStopsAsync(filter, null);
        }
        
        public void GetStopsAsync(string filter, object userState) {
            if ((this.onBeginGetStopsDelegate == null)) {
                this.onBeginGetStopsDelegate = new BeginOperationDelegate(this.OnBeginGetStops);
            }
            if ((this.onEndGetStopsDelegate == null)) {
                this.onEndGetStopsDelegate = new EndOperationDelegate(this.OnEndGetStops);
            }
            if ((this.onGetStopsCompletedDelegate == null)) {
                this.onGetStopsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStopsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStopsDelegate, new object[] {
                        filter}, this.onEndGetStopsDelegate, this.onGetStopsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TransitPlannerMobile.RoutePlannerService.ISoapService.BeginGetStop(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStop(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TransitPlannerMobile.RoutePlannerService.TransitStopInfo TransitPlannerMobile.RoutePlannerService.ISoapService.EndGetStop(System.IAsyncResult result) {
            return base.Channel.EndGetStop(result);
        }
        
        private System.IAsyncResult OnBeginGetStop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).BeginGetStop(id, callback, asyncState);
        }
        
        private object[] OnEndGetStop(System.IAsyncResult result) {
            TransitPlannerMobile.RoutePlannerService.TransitStopInfo retVal = ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).EndGetStop(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStopCompleted(object state) {
            if ((this.GetStopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStopCompleted(this, new GetStopCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStopAsync(int id) {
            this.GetStopAsync(id, null);
        }
        
        public void GetStopAsync(int id, object userState) {
            if ((this.onBeginGetStopDelegate == null)) {
                this.onBeginGetStopDelegate = new BeginOperationDelegate(this.OnBeginGetStop);
            }
            if ((this.onEndGetStopDelegate == null)) {
                this.onEndGetStopDelegate = new EndOperationDelegate(this.OnEndGetStop);
            }
            if ((this.onGetStopCompletedDelegate == null)) {
                this.onGetStopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStopCompleted);
            }
            base.InvokeAsync(this.onBeginGetStopDelegate, new object[] {
                        id}, this.onEndGetStopDelegate, this.onGetStopCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TransitPlannerMobile.RoutePlannerService.ISoapService.BeginGetRoutes(string filter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoutes(filter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitRoute> TransitPlannerMobile.RoutePlannerService.ISoapService.EndGetRoutes(System.IAsyncResult result) {
            return base.Channel.EndGetRoutes(result);
        }
        
        private System.IAsyncResult OnBeginGetRoutes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filter = ((string)(inValues[0]));
            return ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).BeginGetRoutes(filter, callback, asyncState);
        }
        
        private object[] OnEndGetRoutes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitRoute> retVal = ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).EndGetRoutes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRoutesCompleted(object state) {
            if ((this.GetRoutesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoutesCompleted(this, new GetRoutesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRoutesAsync(string filter) {
            this.GetRoutesAsync(filter, null);
        }
        
        public void GetRoutesAsync(string filter, object userState) {
            if ((this.onBeginGetRoutesDelegate == null)) {
                this.onBeginGetRoutesDelegate = new BeginOperationDelegate(this.OnBeginGetRoutes);
            }
            if ((this.onEndGetRoutesDelegate == null)) {
                this.onEndGetRoutesDelegate = new EndOperationDelegate(this.OnEndGetRoutes);
            }
            if ((this.onGetRoutesCompletedDelegate == null)) {
                this.onGetRoutesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoutesCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoutesDelegate, new object[] {
                        filter}, this.onEndGetRoutesDelegate, this.onGetRoutesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TransitPlannerMobile.RoutePlannerService.ISoapService.BeginGetRoute(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoute(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TransitPlannerMobile.RoutePlannerService.TransitRoute TransitPlannerMobile.RoutePlannerService.ISoapService.EndGetRoute(System.IAsyncResult result) {
            return base.Channel.EndGetRoute(result);
        }
        
        private System.IAsyncResult OnBeginGetRoute(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).BeginGetRoute(id, callback, asyncState);
        }
        
        private object[] OnEndGetRoute(System.IAsyncResult result) {
            TransitPlannerMobile.RoutePlannerService.TransitRoute retVal = ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).EndGetRoute(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRouteCompleted(object state) {
            if ((this.GetRouteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRouteCompleted(this, new GetRouteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRouteAsync(int id) {
            this.GetRouteAsync(id, null);
        }
        
        public void GetRouteAsync(int id, object userState) {
            if ((this.onBeginGetRouteDelegate == null)) {
                this.onBeginGetRouteDelegate = new BeginOperationDelegate(this.OnBeginGetRoute);
            }
            if ((this.onEndGetRouteDelegate == null)) {
                this.onEndGetRouteDelegate = new EndOperationDelegate(this.OnEndGetRoute);
            }
            if ((this.onGetRouteCompletedDelegate == null)) {
                this.onGetRouteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRouteCompleted);
            }
            base.InvokeAsync(this.onBeginGetRouteDelegate, new object[] {
                        id}, this.onEndGetRouteDelegate, this.onGetRouteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TransitPlannerMobile.RoutePlannerService.ISoapService.BeginGetMetadata(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMetadata(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TransitPlannerMobile.RoutePlannerService.TransitMetadata TransitPlannerMobile.RoutePlannerService.ISoapService.EndGetMetadata(System.IAsyncResult result) {
            return base.Channel.EndGetMetadata(result);
        }
        
        private System.IAsyncResult OnBeginGetMetadata(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).BeginGetMetadata(callback, asyncState);
        }
        
        private object[] OnEndGetMetadata(System.IAsyncResult result) {
            TransitPlannerMobile.RoutePlannerService.TransitMetadata retVal = ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).EndGetMetadata(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMetadataCompleted(object state) {
            if ((this.GetMetadataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMetadataCompleted(this, new GetMetadataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMetadataAsync() {
            this.GetMetadataAsync(null);
        }
        
        public void GetMetadataAsync(object userState) {
            if ((this.onBeginGetMetadataDelegate == null)) {
                this.onBeginGetMetadataDelegate = new BeginOperationDelegate(this.OnBeginGetMetadata);
            }
            if ((this.onEndGetMetadataDelegate == null)) {
                this.onEndGetMetadataDelegate = new EndOperationDelegate(this.OnEndGetMetadata);
            }
            if ((this.onGetMetadataCompletedDelegate == null)) {
                this.onGetMetadataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMetadataCompleted);
            }
            base.InvokeAsync(this.onBeginGetMetadataDelegate, null, this.onEndGetMetadataDelegate, this.onGetMetadataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TransitPlannerMobile.RoutePlannerService.ISoapService.BeginGetSchedule(int route_id, TransitPlannerMobile.RoutePlannerService.TransitDate when, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSchedule(route_id, when, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceGroup> TransitPlannerMobile.RoutePlannerService.ISoapService.EndGetSchedule(System.IAsyncResult result) {
            return base.Channel.EndGetSchedule(result);
        }
        
        private System.IAsyncResult OnBeginGetSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int route_id = ((int)(inValues[0]));
            TransitPlannerMobile.RoutePlannerService.TransitDate when = ((TransitPlannerMobile.RoutePlannerService.TransitDate)(inValues[1]));
            return ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).BeginGetSchedule(route_id, when, callback, asyncState);
        }
        
        private object[] OnEndGetSchedule(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceGroup> retVal = ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).EndGetSchedule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetScheduleCompleted(object state) {
            if ((this.GetScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetScheduleCompleted(this, new GetScheduleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetScheduleAsync(int route_id, TransitPlannerMobile.RoutePlannerService.TransitDate when) {
            this.GetScheduleAsync(route_id, when, null);
        }
        
        public void GetScheduleAsync(int route_id, TransitPlannerMobile.RoutePlannerService.TransitDate when, object userState) {
            if ((this.onBeginGetScheduleDelegate == null)) {
                this.onBeginGetScheduleDelegate = new BeginOperationDelegate(this.OnBeginGetSchedule);
            }
            if ((this.onEndGetScheduleDelegate == null)) {
                this.onEndGetScheduleDelegate = new EndOperationDelegate(this.OnEndGetSchedule);
            }
            if ((this.onGetScheduleCompletedDelegate == null)) {
                this.onGetScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginGetScheduleDelegate, new object[] {
                        route_id,
                        when}, this.onEndGetScheduleDelegate, this.onGetScheduleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TransitPlannerMobile.RoutePlannerService.ISoapService.BeginGetSequences(int route_id, TransitPlannerMobile.RoutePlannerService.TransitDate when, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSequences(route_id, when, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceInfo> TransitPlannerMobile.RoutePlannerService.ISoapService.EndGetSequences(System.IAsyncResult result) {
            return base.Channel.EndGetSequences(result);
        }
        
        private System.IAsyncResult OnBeginGetSequences(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int route_id = ((int)(inValues[0]));
            TransitPlannerMobile.RoutePlannerService.TransitDate when = ((TransitPlannerMobile.RoutePlannerService.TransitDate)(inValues[1]));
            return ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).BeginGetSequences(route_id, when, callback, asyncState);
        }
        
        private object[] OnEndGetSequences(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceInfo> retVal = ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).EndGetSequences(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSequencesCompleted(object state) {
            if ((this.GetSequencesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSequencesCompleted(this, new GetSequencesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSequencesAsync(int route_id, TransitPlannerMobile.RoutePlannerService.TransitDate when) {
            this.GetSequencesAsync(route_id, when, null);
        }
        
        public void GetSequencesAsync(int route_id, TransitPlannerMobile.RoutePlannerService.TransitDate when, object userState) {
            if ((this.onBeginGetSequencesDelegate == null)) {
                this.onBeginGetSequencesDelegate = new BeginOperationDelegate(this.OnBeginGetSequences);
            }
            if ((this.onEndGetSequencesDelegate == null)) {
                this.onEndGetSequencesDelegate = new EndOperationDelegate(this.OnEndGetSequences);
            }
            if ((this.onGetSequencesCompletedDelegate == null)) {
                this.onGetSequencesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSequencesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSequencesDelegate, new object[] {
                        route_id,
                        when}, this.onEndGetSequencesDelegate, this.onGetSequencesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TransitPlannerMobile.RoutePlannerService.ISoapService.BeginGetSequence(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSequence(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceElement> TransitPlannerMobile.RoutePlannerService.ISoapService.EndGetSequence(System.IAsyncResult result) {
            return base.Channel.EndGetSequence(result);
        }
        
        private System.IAsyncResult OnBeginGetSequence(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).BeginGetSequence(id, callback, asyncState);
        }
        
        private object[] OnEndGetSequence(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceElement> retVal = ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).EndGetSequence(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSequenceCompleted(object state) {
            if ((this.GetSequenceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSequenceCompleted(this, new GetSequenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSequenceAsync(int id) {
            this.GetSequenceAsync(id, null);
        }
        
        public void GetSequenceAsync(int id, object userState) {
            if ((this.onBeginGetSequenceDelegate == null)) {
                this.onBeginGetSequenceDelegate = new BeginOperationDelegate(this.OnBeginGetSequence);
            }
            if ((this.onEndGetSequenceDelegate == null)) {
                this.onEndGetSequenceDelegate = new EndOperationDelegate(this.OnEndGetSequence);
            }
            if ((this.onGetSequenceCompletedDelegate == null)) {
                this.onGetSequenceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSequenceCompleted);
            }
            base.InvokeAsync(this.onBeginGetSequenceDelegate, new object[] {
                        id}, this.onEndGetSequenceDelegate, this.onGetSequenceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TransitPlannerMobile.RoutePlannerService.ISoapService.BeginGetPlan(TransitPlannerMobile.RoutePlannerService.WebTransitPlanRequestParameters parameters, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlan(parameters, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TransitPlannerMobile.RoutePlannerService.TransitPlan TransitPlannerMobile.RoutePlannerService.ISoapService.EndGetPlan(System.IAsyncResult result) {
            return base.Channel.EndGetPlan(result);
        }
        
        private System.IAsyncResult OnBeginGetPlan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TransitPlannerMobile.RoutePlannerService.WebTransitPlanRequestParameters parameters = ((TransitPlannerMobile.RoutePlannerService.WebTransitPlanRequestParameters)(inValues[0]));
            return ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).BeginGetPlan(parameters, callback, asyncState);
        }
        
        private object[] OnEndGetPlan(System.IAsyncResult result) {
            TransitPlannerMobile.RoutePlannerService.TransitPlan retVal = ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).EndGetPlan(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlanCompleted(object state) {
            if ((this.GetPlanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlanCompleted(this, new GetPlanCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlanAsync(TransitPlannerMobile.RoutePlannerService.WebTransitPlanRequestParameters parameters) {
            this.GetPlanAsync(parameters, null);
        }
        
        public void GetPlanAsync(TransitPlannerMobile.RoutePlannerService.WebTransitPlanRequestParameters parameters, object userState) {
            if ((this.onBeginGetPlanDelegate == null)) {
                this.onBeginGetPlanDelegate = new BeginOperationDelegate(this.OnBeginGetPlan);
            }
            if ((this.onEndGetPlanDelegate == null)) {
                this.onEndGetPlanDelegate = new EndOperationDelegate(this.OnEndGetPlan);
            }
            if ((this.onGetPlanCompletedDelegate == null)) {
                this.onGetPlanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlanCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlanDelegate, new object[] {
                        parameters}, this.onEndGetPlanDelegate, this.onGetPlanCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TransitPlannerMobile.RoutePlannerService.ISoapService.BeginGetSimplePlan(int from, int to, int year, int month, int day, int hour, int minute, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSimplePlan(from, to, year, month, day, hour, minute, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TransitPlannerMobile.RoutePlannerService.TransitPlan TransitPlannerMobile.RoutePlannerService.ISoapService.EndGetSimplePlan(System.IAsyncResult result) {
            return base.Channel.EndGetSimplePlan(result);
        }
        
        private System.IAsyncResult OnBeginGetSimplePlan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int from = ((int)(inValues[0]));
            int to = ((int)(inValues[1]));
            int year = ((int)(inValues[2]));
            int month = ((int)(inValues[3]));
            int day = ((int)(inValues[4]));
            int hour = ((int)(inValues[5]));
            int minute = ((int)(inValues[6]));
            return ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).BeginGetSimplePlan(from, to, year, month, day, hour, minute, callback, asyncState);
        }
        
        private object[] OnEndGetSimplePlan(System.IAsyncResult result) {
            TransitPlannerMobile.RoutePlannerService.TransitPlan retVal = ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).EndGetSimplePlan(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSimplePlanCompleted(object state) {
            if ((this.GetSimplePlanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSimplePlanCompleted(this, new GetSimplePlanCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSimplePlanAsync(int from, int to, int year, int month, int day, int hour, int minute) {
            this.GetSimplePlanAsync(from, to, year, month, day, hour, minute, null);
        }
        
        public void GetSimplePlanAsync(int from, int to, int year, int month, int day, int hour, int minute, object userState) {
            if ((this.onBeginGetSimplePlanDelegate == null)) {
                this.onBeginGetSimplePlanDelegate = new BeginOperationDelegate(this.OnBeginGetSimplePlan);
            }
            if ((this.onEndGetSimplePlanDelegate == null)) {
                this.onEndGetSimplePlanDelegate = new EndOperationDelegate(this.OnEndGetSimplePlan);
            }
            if ((this.onGetSimplePlanCompletedDelegate == null)) {
                this.onGetSimplePlanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSimplePlanCompleted);
            }
            base.InvokeAsync(this.onBeginGetSimplePlanDelegate, new object[] {
                        from,
                        to,
                        year,
                        month,
                        day,
                        hour,
                        minute}, this.onEndGetSimplePlanDelegate, this.onGetSimplePlanCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TransitPlannerMobile.RoutePlannerService.ISoapService.BeginSendTroubleReport(TransitPlannerMobile.RoutePlannerService.SendTroubleReportRequest trouble_report_parameters, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendTroubleReport(trouble_report_parameters, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void TransitPlannerMobile.RoutePlannerService.ISoapService.EndSendTroubleReport(System.IAsyncResult result) {
            base.Channel.EndSendTroubleReport(result);
        }
        
        private System.IAsyncResult OnBeginSendTroubleReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TransitPlannerMobile.RoutePlannerService.SendTroubleReportRequest trouble_report_parameters = ((TransitPlannerMobile.RoutePlannerService.SendTroubleReportRequest)(inValues[0]));
            return ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).BeginSendTroubleReport(trouble_report_parameters, callback, asyncState);
        }
        
        private object[] OnEndSendTroubleReport(System.IAsyncResult result) {
            ((TransitPlannerMobile.RoutePlannerService.ISoapService)(this)).EndSendTroubleReport(result);
            return null;
        }
        
        private void OnSendTroubleReportCompleted(object state) {
            if ((this.SendTroubleReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendTroubleReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendTroubleReportAsync(TransitPlannerMobile.RoutePlannerService.SendTroubleReportRequest trouble_report_parameters) {
            this.SendTroubleReportAsync(trouble_report_parameters, null);
        }
        
        public void SendTroubleReportAsync(TransitPlannerMobile.RoutePlannerService.SendTroubleReportRequest trouble_report_parameters, object userState) {
            if ((this.onBeginSendTroubleReportDelegate == null)) {
                this.onBeginSendTroubleReportDelegate = new BeginOperationDelegate(this.OnBeginSendTroubleReport);
            }
            if ((this.onEndSendTroubleReportDelegate == null)) {
                this.onEndSendTroubleReportDelegate = new EndOperationDelegate(this.OnEndSendTroubleReport);
            }
            if ((this.onSendTroubleReportCompletedDelegate == null)) {
                this.onSendTroubleReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendTroubleReportCompleted);
            }
            base.InvokeAsync(this.onBeginSendTroubleReportDelegate, new object[] {
                        trouble_report_parameters}, this.onEndSendTroubleReportDelegate, this.onSendTroubleReportCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override TransitPlannerMobile.RoutePlannerService.ISoapService CreateChannel() {
            return new SoapServiceClientChannel(this);
        }
        
        private class SoapServiceClientChannel : ChannelBase<TransitPlannerMobile.RoutePlannerService.ISoapService>, TransitPlannerMobile.RoutePlannerService.ISoapService {
            
            public SoapServiceClientChannel(System.ServiceModel.ClientBase<TransitPlannerMobile.RoutePlannerService.ISoapService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetAllStops(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllStops", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop> EndGetAllStops(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop> _result = ((System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop>)(base.EndInvoke("GetAllStops", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStops(string filter, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = filter;
                System.IAsyncResult _result = base.BeginInvoke("GetStops", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop> EndGetStops(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop> _result = ((System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitStop>)(base.EndInvoke("GetStops", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStop(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetStop", _args, callback, asyncState);
                return _result;
            }
            
            public TransitPlannerMobile.RoutePlannerService.TransitStopInfo EndGetStop(System.IAsyncResult result) {
                object[] _args = new object[0];
                TransitPlannerMobile.RoutePlannerService.TransitStopInfo _result = ((TransitPlannerMobile.RoutePlannerService.TransitStopInfo)(base.EndInvoke("GetStop", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRoutes(string filter, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = filter;
                System.IAsyncResult _result = base.BeginInvoke("GetRoutes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitRoute> EndGetRoutes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitRoute> _result = ((System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitRoute>)(base.EndInvoke("GetRoutes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRoute(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetRoute", _args, callback, asyncState);
                return _result;
            }
            
            public TransitPlannerMobile.RoutePlannerService.TransitRoute EndGetRoute(System.IAsyncResult result) {
                object[] _args = new object[0];
                TransitPlannerMobile.RoutePlannerService.TransitRoute _result = ((TransitPlannerMobile.RoutePlannerService.TransitRoute)(base.EndInvoke("GetRoute", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMetadata(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMetadata", _args, callback, asyncState);
                return _result;
            }
            
            public TransitPlannerMobile.RoutePlannerService.TransitMetadata EndGetMetadata(System.IAsyncResult result) {
                object[] _args = new object[0];
                TransitPlannerMobile.RoutePlannerService.TransitMetadata _result = ((TransitPlannerMobile.RoutePlannerService.TransitMetadata)(base.EndInvoke("GetMetadata", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSchedule(int route_id, TransitPlannerMobile.RoutePlannerService.TransitDate when, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = route_id;
                _args[1] = when;
                System.IAsyncResult _result = base.BeginInvoke("GetSchedule", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceGroup> EndGetSchedule(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceGroup> _result = ((System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceGroup>)(base.EndInvoke("GetSchedule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSequences(int route_id, TransitPlannerMobile.RoutePlannerService.TransitDate when, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = route_id;
                _args[1] = when;
                System.IAsyncResult _result = base.BeginInvoke("GetSequences", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceInfo> EndGetSequences(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceInfo>)(base.EndInvoke("GetSequences", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSequence(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetSequence", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceElement> EndGetSequence(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceElement> _result = ((System.Collections.ObjectModel.ObservableCollection<TransitPlannerMobile.RoutePlannerService.TransitSequenceElement>)(base.EndInvoke("GetSequence", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlan(TransitPlannerMobile.RoutePlannerService.WebTransitPlanRequestParameters parameters, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = parameters;
                System.IAsyncResult _result = base.BeginInvoke("GetPlan", _args, callback, asyncState);
                return _result;
            }
            
            public TransitPlannerMobile.RoutePlannerService.TransitPlan EndGetPlan(System.IAsyncResult result) {
                object[] _args = new object[0];
                TransitPlannerMobile.RoutePlannerService.TransitPlan _result = ((TransitPlannerMobile.RoutePlannerService.TransitPlan)(base.EndInvoke("GetPlan", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSimplePlan(int from, int to, int year, int month, int day, int hour, int minute, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = from;
                _args[1] = to;
                _args[2] = year;
                _args[3] = month;
                _args[4] = day;
                _args[5] = hour;
                _args[6] = minute;
                System.IAsyncResult _result = base.BeginInvoke("GetSimplePlan", _args, callback, asyncState);
                return _result;
            }
            
            public TransitPlannerMobile.RoutePlannerService.TransitPlan EndGetSimplePlan(System.IAsyncResult result) {
                object[] _args = new object[0];
                TransitPlannerMobile.RoutePlannerService.TransitPlan _result = ((TransitPlannerMobile.RoutePlannerService.TransitPlan)(base.EndInvoke("GetSimplePlan", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendTroubleReport(TransitPlannerMobile.RoutePlannerService.SendTroubleReportRequest trouble_report_parameters, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = trouble_report_parameters;
                System.IAsyncResult _result = base.BeginInvoke("SendTroubleReport", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendTroubleReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendTroubleReport", _args, result);
            }
        }
    }
}
